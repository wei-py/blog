import{_ as i,c as a,o as e,ah as t}from"./chunks/framework.ptg7Kx6M.js";const p=JSON.parse('{"title":"react","description":"","frontmatter":{"title":"react","date":"2025-08-22T00:00:00.000Z","category":"react","tags":["react"]},"headers":[],"relativePath":"posts/react/react.md","filePath":"posts/react/react.md"}'),r={name:"posts/react/react.md"};function o(u,l,n,s,h,c){return e(),a("div",null,l[0]||(l[0]=[t('<h2 id="声明模式" tabindex="-1">声明模式 <a class="header-anchor" href="#声明模式" aria-label="Permalink to &quot;声明模式&quot;">​</a></h2><ul><li>路由 <ul><li>NavLink</li></ul></li><li>url</li><li>导航</li></ul><h2 id="数据模式-推荐" tabindex="-1">数据模式 推荐 <a class="header-anchor" href="#数据模式-推荐" aria-label="Permalink to &quot;数据模式 推荐&quot;">​</a></h2><ul><li>路由</li><li>路由对k象</li><li>操作</li><li>导航 <ul><li>Link <ul><li>to (path) // 跳转路径</li><li>replace (path) // 替换当前历史记录</li><li>state (any) // 传递数据</li><li>relative (string) // 相对路径跳转</li><li>preventScrollReset (boolean) // 阻止滚动重置</li><li>viewTransition (boolean) // 是否使用视图过渡动画</li></ul></li><li>NavLink <ul><li>同上</li><li>多了一些类名属性</li></ul></li><li>useNavigation</li><li>redirect</li></ul></li><li>待处理用户界面</li><li>自定义框架</li></ul><h2 id="路由模式" tabindex="-1">路由模式 <a class="header-anchor" href="#路由模式" aria-label="Permalink to &quot;路由模式&quot;">​</a></h2><ul><li>createBrowserRouter</li><li>createHashRouter</li><li>createMemoRouter</li><li>createStaticRouter</li></ul><h2 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h2><ul><li>嵌套路由</li><li>布局路由 <ul><li>省略 path</li></ul></li><li>索引路由 <ul><li>index: true</li></ul></li><li>前缀路由 <ul><li>省略 Component</li></ul></li><li>动态路由</li></ul><h2 id="传参数" tabindex="-1">传参数 <a class="header-anchor" href="#传参数" aria-label="Permalink to &quot;传参数&quot;">​</a></h2><ul><li>query <ul><li>搜索和分页</li></ul></li><li>params <ul><li>推荐使用</li></ul></li><li>state <ul><li>复杂数据类型</li><li>缺点不能分享</li></ul></li></ul><h2 id="懒加载" tabindex="-1">懒加载 <a class="header-anchor" href="#懒加载" aria-label="Permalink to &quot;懒加载&quot;">​</a></h2><ul><li>lazy <ul><li>使用 navigation <ul><li>state <ul><li>idle 空闲状态</li><li>submitting 提交状态</li><li>loading 加载状态</li></ul></li></ul></li></ul></li></ul><h2 id="操作" tabindex="-1">操作 <a class="header-anchor" href="#操作" aria-label="Permalink to &quot;操作&quot;">​</a></h2><ul><li>loader</li><li>action</li></ul><h2 id="边界处理" tabindex="-1">边界处理 <a class="header-anchor" href="#边界处理" aria-label="Permalink to &quot;边界处理&quot;">​</a></h2><ul><li>ErrorBoundary</li></ul><h2 id="store" tabindex="-1">store <a class="header-anchor" href="#store" aria-label="Permalink to &quot;store&quot;">​</a></h2><ul><li>zustand</li><li>immer</li><li>useShallow</li><li>中间件</li><li>订阅</li></ul><h2 id="新增页面" tabindex="-1">新增页面 <a class="header-anchor" href="#新增页面" aria-label="Permalink to &quot;新增页面&quot;">​</a></h2><ul><li><p>router</p></li><li><p>pages</p></li><li><p>menu</p></li><li><p>store</p></li><li><p>git add</p></li></ul><h2 id="编辑器" tabindex="-1">编辑器 <a class="header-anchor" href="#编辑器" aria-label="Permalink to &quot;编辑器&quot;">​</a></h2><ul><li>pnpm dev</li><li>yazi</li><li>lazygit</li><li>oco</li></ul>',22)]))}const m=i(r,[["render",o]]);export{p as __pageData,m as default};
